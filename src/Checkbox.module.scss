// this one is a mess, i'm sorry

@use "./mixins.scss";

.checkbox {
    display: flex;
    flex-direction: row;
    align-items: center;

    & > input {
        cursor: pointer;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        width: 1.25rem;
        height: 1.25rem;

        overflow: hidden;
        outline: none;
        position: relative;
        margin: 0;

        border: 1px solid var(--c-component--neutral--stroke);
        border-radius: var(--border-radius-xs);
        outline: var(--outline-focus--off);
        outline-offset: var(--outline-focus--offset);
        background: var(--c-component--primary);

        transition:
            background-color 0.15s ease,
            border-color 0.15s ease,
            outline-width 0.1s ease;

        // checkmark
        &:before {
            content: "";
            display: block;
            position: absolute;
            top: 0.125rem;
            left: 0.35rem;
            width: 0.25rem;
            height: 0.5rem;
            border: solid var(--c-component-label--primary);
            border-width: 0 0.2rem 0.2rem 0;
            transform: rotate(45deg);
        }

        // cover up the checkmark while unchecked
        &::after {
            content: "";
            display: block;
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: var(--c-component--neutral--fill);
            transform: scale(1);
            transition: transform 0.15s ease;
        }

        &:checked::after {
            transform: scale(0);
        }

        &:focus {
            outline: var(--outline-focus--on);
        }
    }

    & > label {
        cursor: pointer;
        padding-left: var(--spacing-xs);
        font-size: var(--text-sm);
        line-height: var(--leading-sm);
        font-weight: 500;
        user-select: none;
    }
}

.checkbox:not(.disabled) > input {
    &:checked {
        border-color: var(--c-component--primary);
        &:hover {
            border-color: var(--c-component--primary--hover);
            background: var(--c-component--primary--hover);
        }

        &:active {
            border-color: var(--c-component--primary--active);
            background: var(--c-component--primary--active);
        }
    }

    &:not(:checked) {
        &:hover {
            border-color: var(--c-component--neutral--stroke--hover);
            &::after {
                background-color: var(--c-component--neutral--fill--hover);
            }
        }

        &:active {
            border-color: var(--c-component--neutral--stroke--active);
            &::after {
                background-color: var(--c-component--neutral--fill--active);
            }
        }
    }
}
.disabled > input {
    border-color: var(--c-component--neutral--stroke--disabled);
    background: var(--c-component--primary--disabled);
    cursor: not-allowed;

    &:after {
        background: var(--c-component--neutral--fill--disabled);
    }

    &:active {
        background: var(--component--primary--disabled);
        &::after {
            background: var(--c-component--neutral--fill--disabled);
        }
    }

    &:checked {
        background: var(--c-component--primary--disabled);
        border-color: var(--c-component--primary--disabled);
        &:hover {
            background: var(--c-component--primary--disabled);
            &::after {
                background: var(--c-component--neutral--fill--disabled);
            }
        }
    }
}
